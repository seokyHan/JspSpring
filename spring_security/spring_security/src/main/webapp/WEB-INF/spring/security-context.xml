<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 인증 -->
	<authentication-manager id="test">
		<authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
         users-by-username-query="select id as username, pwd as password, enabled
                             from member
                             where id=?"
         authorities-by-username-query="select id as username, authority
                                 from member
                                 where id=?" />
<!-- 			<user-service> -->
<!-- 				<user name="user" password="user" authorities="ROLE_USER"/> -->
<!-- 				<user name="manager" password="manager" authorities="ROLE_MANAGER"/> -->
<!-- 				<user name="admin" password="admin" authorities="ROLE_ADMIN"/> -->
<!-- 			</user-service> -->
		</authentication-provider>
	</authentication-manager>
	
	<!-- 인허가 범위가 넓을수록 우선순위가 낮음 (/** 이게 /member/** 보다 낮음) -->
	<http use-expressions="true" pattern="/**" authentication-manager-ref="test">
		
		<!-- 권한이 없는경우 해당 url로 dispatcher servlet으로 넘김(403으로 처리 안함) -->
		<access-denied-handler error-page="/security/accessDenied"/>
		
		<intercept-url pattern="/admin/**" access="hasAuthority('ROLE_ADMIN')"/>
		<intercept-url pattern="/manager/**" access="hasAuthority('ROLE_MANAGER')"/>
		<intercept-url pattern="/member/**" access="hasAuthority('ROLE_USER')"/>
		<!--login 했냐 않했냐 판단 -->
		<intercept-url pattern="/home/**" access="isAuthenticated()"/>
		<!--모두 허용 -->
		<intercept-url pattern="/commons/**" access="permitAll"/>
		<intercept-url pattern="/**" access="permitAll"/>
		
		<!-- 얘네는 세션을 안씀() -->
		<!-- login-page는 Dispatcher servlet으로 url 넘어감 -->
		<!-- login-processing-url은 security filter Authentication Filter로 넘김, 
			Dispatcher servlet에 안넘어감 로그인 처리는 security가 처리-->
		<!-- default-target-url은 로그인 만약 성공하면 어떻게 할건가 -->
		<form-login login-page="/commons/login"
					login-processing-url="/commons/loginPost"
					username-parameter="id"
					password-parameter="pwd"
					authentication-success-handler-ref="loginSuccessHandler"
					authentication-failure-handler-ref="loginFailureHandler"/>
					
		<!-- 기본이 true값 -->
		<logout
			invalidate-session="true"
		/>
		
	</http>
	
	<beans:bean id="loginSuccessHandler"
				class="com.spring.security.LoginSuccessHandler"
				p:defaultTargetUrl="/"
				p:memberService-ref="memberService"/>
				
	<beans:bean id="loginFailureHandler"
				class="com.spring.security.LoginFailureHandler"
				/>
	
</beans:beans>
