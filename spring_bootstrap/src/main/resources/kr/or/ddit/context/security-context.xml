<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	
	<beans:bean id="customAuthenticationProvider" 
				class="kr.or.ddit.security.CustomAuthenticationProvider"
				p:memberService-ref="memberService"
	/>
	
	<beans:bean id="loginSuccessHandler" 
				class="kr.or.ddit.security.LoginSuccessHandler"
				p:defaultTargetUrl="/index.do"
	/>
	
	<beans:bean id="loginFailureHandler" 
				class="kr.or.ddit.security.LoginFailureHandler"
	/>
	
	<beans:bean id="sessionRegistry"
				class="org.springframework.security.core.session.SessionRegistryImpl"
	/>
	
	<!-- 인증 -->
	<authentication-manager>
		<authentication-provider ref="customAuthenticationProvider"></authentication-provider>
	</authentication-manager>
	
	<!-- 인허가 security="none" 은 해당 url에 security 처리를 안하겠다고 명시(서블릿으로 넘기지 않음) -->
	<http pattern="/resources/**" security="none" />
	
	<http use-expressions="true" pattern="/**">
		<access-denied-handler error-page="/security/accessDenied"/>
		
		<intercept-url pattern="/**/regist*" access="hasAnyRole('ROLE_ADMIN,ROLE_MANAGER')"/>
		<intercept-url pattern="/**/modify*" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/**/stop*" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/**/remove*" access="hasRole('ROLE_ADMIN')"/>
		
		<intercept-url pattern="/index.do" access="isAuthenticated()"/>
		<intercept-url pattern="/member/**" access="isAuthenticated()"/>
		<intercept-url pattern="/notice/**" access="isAuthenticated()"/>
		<intercept-url pattern="/board/**" access="isAuthenticated()"/>
		<intercept-url pattern="/pds/**" access="isAuthenticated()"/>
		
		<intercept-url pattern="/replies/**" access="isAuthenticated()"/>
		
		<intercept-url pattern="/**" access="permitAll"/>		
		
		<form-login login-page="/common/loginForm.do?error=1"
					login-processing-url="/common/login.do"
					username-parameter="id"
					password-parameter="pwd"
					authentication-success-handler-ref="loginSuccessHandler"
					authentication-failure-handler-ref="loginFailureHandler" 
		/>
		
		<logout logout-url="/common/logout.do"
				logout-success-url="/"
				invalidate-session="true"
				delete-cookies="JSESSIONID"
		/>
		
		<!-- security는 loginExpired로 오지만 실제 url은 loginTimeOut으로 찍힘(리다이렉트) -->
		<!-- 이때 중복 로그인이 일어날 경우 처음 로그인한 사용자는 접속이 끊기고 다음 request시 expired-url​에 지정한 주소로 이동된다 
			(invalid-session-url​이 있을경우 invalid-session-url​로 이동 -->
		<session-management invalid-session-url="/common/loginTimeOut">
	         <concurrency-control
	            expired-url="/common/loginExpired"
	            max-sessions="1"
	            session-registry-ref="sessionRegistry"
	         />
      	</session-management>
		
	</http>
	
</beans:beans>
