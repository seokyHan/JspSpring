<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- .do를 무조건 줘야함. HandlerMapper를 안거침.(simple urlMapper) 자기가 직접 resolver로 보냄 이말은 즉슨 Model에 접근 못함 -->
	<!-- 그냥 특정 url을 jsp로 포워딩 치는애라고 생각해 path="/"로 잡으면 console에 root로 나옴-->
	<view-controller path="/" view-name="index"/>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" p:defaultEncoding="utf-8"/>
	
	<!-- Bean named Resolver p:order dispatcher servlet이 먼저 받아서 view찾아서 없으면 아래 resolver에 넘김 -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="1"/>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="kr.or.ddit.controller" />
	
	
	<interceptors>
		<interceptor>
			<mapping path="/common/login.do"/>
			<beans:bean class="kr.or.ddit.interceptor.LoginUserLoginterceptor" p:savePath-ref="loginUserLogSavePath"/>
		</interceptor>
		<interceptor>
			<mapping path="/**/regist.do" />
			<mapping path="/**/modify.do" />
			<beans:bean class="kr.or.ddit.interceptor.XSSRequestInterceptor" />
		</interceptor>
	</interceptors>
	
	
	<!-- Views -->
	<beans:bean id="downloadFile" class="kr.or.ddit.view.FileDownloadView"/>
	
</beans:beans>
